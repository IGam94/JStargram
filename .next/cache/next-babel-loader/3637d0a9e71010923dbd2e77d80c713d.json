{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  user: {},\n  post: {}\n};\n\nconst changeNickname = data => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data\n  };\n};\n\nchangeNickname('LEE');\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/lee/JStargram/reducers/index.js"],"names":["HYDRATE","initialState","user","post","changeNickname","data","type","rootReducer","state","action","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAC,EADe;AAIpBC,EAAAA,IAAI,EAAC;AAJe,CAArB;;AAUA,MAAMC,cAAc,GAAIC,IAAD,IAAS;AAC9B,SAAM;AACJC,IAAAA,IAAI,EAAC,iBADD;AAEJD,IAAAA;AAFI,GAAN;AAID,CALD;;AAMAD,cAAc,CAAC,KAAD,CAAd;;AAGA,MAAMG,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKN,OAAL;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,MAAtB;AACE,6CAAYD,KAAZ,GAAsBC,MAAM,CAACG,OAA7B;;AACA;AACE,aAAOJ,KAAP;AALN;AAOD,CARD;;AAYA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nconst initialState = {\r\n user:{\r\n\r\n },\r\n post:{\r\n\r\n }\r\n};\r\n\r\n\r\nconst changeNickname = (data) =>{\r\n  return{ \r\n    type:'CHANGE_NICKNAME',\r\n    data,\r\n  }\r\n}\r\nchangeNickname('LEE')\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n    console.log('HYDRATE',action);\r\n      return { ...state, ...action.payload };\r\n      default:\r\n        return state;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}