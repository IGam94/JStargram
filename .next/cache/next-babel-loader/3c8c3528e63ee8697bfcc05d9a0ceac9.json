{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar innitialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport var loginAction = function loginAction(data) {\n  return {\n    type: 'LOG_IN',\n    data: data\n  };\n};\nexport var logOutAction = function logOutAction() {\n  return {\n    type: 'LOG_OUT'\n  };\n};\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n};\n\nchangeNickname('LEE');\nSTOREKEY.dispatch(changeNickname('LEEJS'));\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/lee/JStargram/reducers/index.js"],"names":["innitialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","loginAction","data","type","logOutAction","changeNickname","STOREKEY","dispatch","rootReducer","state","initialState","action"],"mappings":";;;;;;AAAA,IAAMA,aAAa,GAAG;AACrBC,EAAAA,IAAI,EAAC;AACJC,IAAAA,UAAU,EAAC,KADP;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAC;AAJN,GADgB;AAOrBC,EAAAA,IAAI,EAAC;AACJC,IAAAA,SAAS,EAAC;AADN;AAPgB,CAAtB;AAWA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAS;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAK;AAC/B,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;;AAMP,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACH,IAAD,EAAS;AAC9B,SAAM;AACJC,IAAAA,IAAI,EAAC,iBADD;AAEJD,IAAAA,IAAI,EAAJA;AAFI,GAAN;AAID,CALD;;AAMAG,cAAc,CAAC,KAAD,CAAd;AAEAC,QAAQ,CAACC,QAAT,CAAkBF,cAAc,CAAC,OAAD,CAAhC;;AACA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAgC;AAAA,MAA/BC,KAA+B,uEAAzBC,YAAyB;AAAA,MAAXC,MAAW;;AAClD,UAAQA,MAAM,CAACR,IAAf;AACE,SAAK,QAAL;AACE,6CACKM,KADL;AAEEd,QAAAA,IAAI,kCACCc,KAAK,CAACd,IADP;AAEFC,UAAAA,UAAU,EAAC,IAFT;AAGFD,UAAAA,IAAI,EAACgB,MAAM,CAACT;AAHV;AAFN;;AAQA,SAAK,SAAL;AACA,6CACKO,KADL;AAEEd,QAAAA,IAAI,kCACCc,KAAK,CAACd,IADP;AAEFC,UAAAA,UAAU,EAAC,KAFT;AAGFD,UAAAA,IAAI,EAAC;AAHH;AAFN;AAXJ;AAoBD,CArBD;;AAyBA,eAAea,WAAf","sourcesContent":["const innitialState = {\r\n user:{\r\n  isLoggedIn:false,\r\n  user: null,\r\n  signUpData: {},\r\n  loginData:{},\r\n },\r\n post:{\r\n  mainPosts:[],\r\n }\r\n};\r\nexport const loginAction = (data) =>{\r\n  return {\r\n    type: 'LOG_IN',\r\n    data,\r\n  }\r\n}\r\n\r\nexport const logOutAction = () =>{\r\n  return {\r\n    type: 'LOG_OUT',\r\n  }\r\n}\r\n\r\nconst changeNickname = (data) =>{\r\n  return{ \r\n    type:'CHANGE_NICKNAME',\r\n    data,\r\n  }\r\n}\r\nchangeNickname('LEE')\r\n\r\nSTOREKEY.dispatch(changeNickname('LEEJS'))\r\nconst rootReducer = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN':\r\n      return{\r\n        ...state,\r\n        user:{\r\n          ...state.user,\r\n          isLoggedIn:true,\r\n          user:action.data,\r\n        },\r\n      };\r\n      case 'LOG_OUT':\r\n      return{\r\n        ...state,\r\n        user:{\r\n          ...state.user,\r\n          isLoggedIn:false,\r\n          user:null,\r\n        }\r\n      };\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}