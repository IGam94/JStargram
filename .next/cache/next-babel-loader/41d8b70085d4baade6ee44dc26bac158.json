{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport const loginAction = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n};\nexport const logOutAction = () => {\n  return {\n    type: 'LOG_OUT'\n  };\n};\n\nconst changeNickname = data => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data\n  };\n};\n\nchangeNickname('LEE');\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/lee/JStargram/reducers/index.js"],"names":["initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","loginAction","data","type","logOutAction","changeNickname","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAC;AACJC,IAAAA,UAAU,EAAC,KADP;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAC;AAJN,GADe;AAOpBC,EAAAA,IAAI,EAAC;AACJC,IAAAA,SAAS,EAAC;AADN;AAPe,CAArB;AAYA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAS;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAK;AAC/B,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;;AAMP,MAAME,cAAc,GAAIH,IAAD,IAAS;AAC9B,SAAM;AACJC,IAAAA,IAAI,EAAC,iBADD;AAEJD,IAAAA;AAFI,GAAN;AAID,CALD;;AAMAG,cAAc,CAAC,KAAD,CAAd;;AAGA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAK,QAAL;AACE,6CACKI,KADL;AAEEZ,QAAAA,IAAI,kCACCY,KAAK,CAACZ,IADP;AAEFC,UAAAA,UAAU,EAAC,IAFT;AAGFD,UAAAA,IAAI,EAACa,MAAM,CAACN;AAHV;AAFN;;AAQA,SAAK,SAAL;AACA,6CACKK,KADL;AAEEZ,QAAAA,IAAI,kCACCY,KAAK,CAACZ,IADP;AAEFC,UAAAA,UAAU,EAAC,KAFT;AAGFD,UAAAA,IAAI,EAAC;AAHH;AAFN;AAXJ;AAoBD,CArBD;;AAyBA,eAAeW,WAAf","sourcesContent":["const initialState = {\r\n user:{\r\n  isLoggedIn:false,\r\n  user: null,\r\n  signUpData: {},\r\n  loginData:{},\r\n },\r\n post:{\r\n  mainPosts:[],\r\n }\r\n};\r\n\r\nexport const loginAction = (data) =>{\r\n  return {\r\n    type: 'LOG_IN',\r\n    data,\r\n  }\r\n}\r\n\r\nexport const logOutAction = () =>{\r\n  return {\r\n    type: 'LOG_OUT',\r\n  }\r\n}\r\n\r\nconst changeNickname = (data) =>{\r\n  return{ \r\n    type:'CHANGE_NICKNAME',\r\n    data,\r\n  }\r\n}\r\nchangeNickname('LEE')\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN':\r\n      return{\r\n        ...state,\r\n        user:{\r\n          ...state.user,\r\n          isLoggedIn:true,\r\n          user:action.data,\r\n        },\r\n      };\r\n      case 'LOG_OUT':\r\n      return{\r\n        ...state,\r\n        user:{\r\n          ...state.user,\r\n          isLoggedIn:false,\r\n          user:null,\r\n        }\r\n      };\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}