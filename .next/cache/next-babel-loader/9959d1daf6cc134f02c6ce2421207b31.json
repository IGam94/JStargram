{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'JS'\n    },\n    content: '첫번째 게시글 #해시태그 #리액트',\n    Images: [{\n      src: ''\n    }],\n    Comments: [{\n      User: {\n        nickname: '1quiz'\n      },\n      content: '하이하이'\n    }, {\n      User: {\n        nickname: 'gogo'\n      },\n      content: '안녕안녕'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nconst ADD_POST = 'ADD_POST';\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: 'JS'\n  },\n  content: '테스트 데이터입니다.',\n  Images: [],\n  Comments: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/lee/JStargram/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAC,CAAC;AACTC,IAAAA,EAAE,EAAC,CADM;AAETC,IAAAA,IAAI,EAAC;AACHD,MAAAA,EAAE,EAAC,CADA;AAEHE,MAAAA,QAAQ,EAAC;AAFN,KAFI;AAMTC,IAAAA,OAAO,EAAC,oBANC;AAOTC,IAAAA,MAAM,EAAC,CAAC;AACNC,MAAAA,GAAG,EAAC;AADE,KAAD,CAPE;AAUTC,IAAAA,QAAQ,EAAC,CAAC;AACRL,MAAAA,IAAI,EAAC;AACHC,QAAAA,QAAQ,EAAC;AADN,OADG;AAIRC,MAAAA,OAAO,EAAC;AAJA,KAAD,EAMP;AACAF,MAAAA,IAAI,EAAC;AACHC,QAAAA,QAAQ,EAAC;AADN,OADL;AAIAC,MAAAA,OAAO,EAAC;AAJR,KANO;AAVA,GAAD,CADgB;AA0B1BI,EAAAA,UAAU,EAAC,EA1Be;AA2B1BC,EAAAA,SAAS,EAAC;AA3BgB,CAArB;AA8BP,MAAMC,QAAQ,GAAG,UAAjB;AACA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEF;AADe,CAAhB;AAIP,MAAMG,SAAS,GAAG;AACdZ,EAAAA,EAAE,EAAC,CADW;AAEdC,EAAAA,IAAI,EAAC;AACHD,IAAAA,EAAE,EAAC,CADA;AAEHE,IAAAA,QAAQ,EAAC;AAFN,GAFS;AAMdC,EAAAA,OAAO,EAAC,aANM;AAOdC,EAAAA,MAAM,EAAC,EAPO;AAQdE,EAAAA,QAAQ,EAAC;AARK,CAAlB;;AAWA,MAAMO,OAAO,GAAG,CAACC,KAAK,GAAGhB,YAAT,EAAuBiB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKF,QAAL;AACE,6CACGK,KADH;AAEAf,QAAAA,SAAS,EAAC,CAACa,SAAD,EAAW,GAAGE,KAAK,CAACf,SAApB,CAFV;AAGAS,QAAAA,SAAS,EAAC;AAHV;;AAKF;AACE,aAAOM,KAAP;AARJ;AAWD,CAZD;;AAcA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  mainPosts:[{\r\n    id:1,\r\n    User:{\r\n      id:1,\r\n      nickname:'JS',\r\n    },\r\n    content:'첫번째 게시글 #해시태그 #리액트',\r\n    Images:[{\r\n      src:''\r\n    }],\r\n    Comments:[{\r\n      User:{\r\n        nickname:'1quiz',\r\n      },\r\n      content:'하이하이',\r\n      },\r\n      {\r\n      User:{\r\n        nickname:'gogo',\r\n      },\r\n      content:'안녕안녕'\r\n      }\r\n    ],\r\n    \r\n  }],\r\n  imagePaths:[],\r\n  postAdded:false,\r\n}\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nexport const addPost = {\r\n  type: ADD_POST,\r\n}\r\n\r\nconst dummyPost = {\r\n    id:2,\r\n    User:{\r\n      id:1,\r\n      nickname:'JS',\r\n    },\r\n    content:'테스트 데이터입니다.',\r\n    Images:[],\r\n    Comments:[],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n    case ADD_POST:\r\n      return{\r\n      ...state,\r\n      mainPosts:[dummyPost,...state.mainPosts],\r\n      postAdded:true,\r\n      }\r\n    default:\r\n      return state;\r\n      \r\n  } \r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}